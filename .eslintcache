[{"C:\\projects\\portfolio-react-shopping-cart\\src\\App.js":"1","C:\\projects\\portfolio-react-shopping-cart\\src\\index.js":"2","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js":"3","C:\\projects\\portfolio-react-shopping-cart\\src\\util.js":"4","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js":"5","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js":"6"},{"size":5149,"mtime":1607997744545,"results":"7","hashOfConfig":"8"},{"size":267,"mtime":1606950657545,"results":"9","hashOfConfig":"8"},{"size":3289,"mtime":1608511005757,"results":"10","hashOfConfig":"8"},{"size":103,"mtime":1607452613421,"results":"11","hashOfConfig":"8"},{"size":1239,"mtime":1607368634313,"results":"12","hashOfConfig":"8"},{"size":6371,"mtime":1607805628173,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5qr8yt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\portfolio-react-shopping-cart\\src\\App.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\index.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js",["27","28","29"],"import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardImg, CardFooter, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\nimport Fade from 'react-reveal/Fade';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nexport default class ProductComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const productList = this.props.products.map(product => {\r\n            return (\r\n                <Fade bottom>\r\n                    <div key={product._id} className='col-md-6'>\r\n                        <Card style={{marginBottom: '2rem'}}>\r\n                            <CardBody>\r\n                                <CardHeader className='text-center product-title'><a href='#' onClick={this.toggleModal}>{product.title}</a></CardHeader>\r\n                                <CardImg onClick={this.toggleModal} src={product.image} alt={product.description}></CardImg>\r\n                                <CardFooter>\r\n                                    <p>{product.description}</p>\r\n                                    <p>{formatCurrency(product.price)}</p>\r\n                                </CardFooter>\r\n                                <Button onClick={() => this.props.addToCart(product)} color='warning' style={{margin: '1rem'}}>\r\n                                    Add To Cart\r\n                                </Button> \r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Fade>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    {productList}\r\n                </div>\r\n                <div className='row'>\r\n                    {\r\n                        <div className='col-md-6'>\r\n                            <Modal className='text-center product-title' isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                                <ModalBody>\r\n                                    <ModalHeader toggle={this.toggleModal}>{this.props.product.title}</ModalHeader>\r\n                                    <CardImg onClick={this.toggleModal} src={this.props.product.image} alt={this.props.product.description}></CardImg>\r\n                                    <ModalFooter>\r\n                                        <p>{this.props.product.description}</p>\r\n                                        <p>{formatCurrency(this.props.product.price)}</p>\r\n                                    </ModalFooter>\r\n                                    <Button onClick={() => this.props.addToCart(product)}  color='warning' style={{margin: '1rem'}}>\r\n                                        Add To Cart\r\n                                    </Button> \r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div> \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\projects\\portfolio-react-shopping-cart\\src\\util.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js",["30"],{"ruleId":"31","severity":1,"message":"32","line":5,"column":8,"nodeType":"33","messageId":"34","endLine":5,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":30,"column":83,"nodeType":"37","endLine":30,"endColumn":122},{"ruleId":"38","severity":2,"message":"39","line":62,"column":81,"nodeType":"33","messageId":"40","endLine":62,"endColumn":88},{"ruleId":"35","severity":1,"message":"36","line":44,"column":44,"nodeType":"37","endLine":44,"endColumn":56},"no-unused-vars","'Zoom' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-undef","'product' is not defined.","undef"]