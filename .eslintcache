[{"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js":"1","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\productActions.js":"2","C:\\projects\\portfolio-react-shopping-cart\\src\\App.js":"3","C:\\projects\\portfolio-react-shopping-cart\\src\\index.js":"4","C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\productReducers.js":"5","C:\\projects\\portfolio-react-shopping-cart\\src\\types.js":"6","C:\\projects\\portfolio-react-shopping-cart\\src\\util.js":"7","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js":"8","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js":"9","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\cartActions.js":"10","C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\cartReducers.js":"11","C:\\projects\\portfolio-react-shopping-cart\\src\\store.js":"12","C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\orderReducers.js":"13","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\orderActions.js":"14"},{"size":4166,"mtime":1610231177482,"results":"15","hashOfConfig":"16"},{"size":1128,"mtime":1609544400450,"results":"17","hashOfConfig":"16"},{"size":1801,"mtime":1609639364511,"results":"18","hashOfConfig":"16"},{"size":267,"mtime":1610314763700,"results":"19","hashOfConfig":"16"},{"size":787,"mtime":1609450648874,"results":"20","hashOfConfig":"16"},{"size":411,"mtime":1609980729550,"results":"21","hashOfConfig":"16"},{"size":103,"mtime":1607452613421,"results":"22","hashOfConfig":"16"},{"size":8620,"mtime":1610230699936,"results":"23","hashOfConfig":"16"},{"size":1914,"mtime":1610231255265,"results":"24","hashOfConfig":"16"},{"size":958,"mtime":1609721404322,"results":"25","hashOfConfig":"16"},{"size":448,"mtime":1609721013866,"results":"26","hashOfConfig":"16"},{"size":625,"mtime":1610154347588,"results":"27","hashOfConfig":"16"},{"size":354,"mtime":1610155710936,"results":"28","hashOfConfig":"16"},{"size":759,"mtime":1610154135550,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"5qr8yt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js",["61"],"import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardImg, CardFooter, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\nimport Fade from 'react-reveal/Fade';\r\nimport {connect} from 'react-redux'; \r\nimport {fetchProducts} from '../actions/productActions'; \r\nimport {addToCart} from '../actions/cartActions'; \r\n\r\nclass ProductComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            product: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchProducts(); \r\n    }\r\n\r\n    openModal = (product) => {\r\n        this.setState({product}); \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({product: null});\r\n    }\r\n\r\n    render() {\r\n        const {product} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Fade bottom>\r\n                        {\r\n                            !this.props.products ? (<div style={{fontWeight: 'bold', color: 'white'}}>Loading...</div>) :\r\n                            <div className='row'>\r\n                                {this.props.products.map(product => \r\n                                    <div className='col-md-6'> \r\n                                        <Card key={product._id} style={{marginBottom: '2rem'}}>\r\n                                            <CardBody>\r\n                                                <CardHeader className='text-center product-title'><a href='#' onClick={() => this.openModal(product)}>{product.title}</a></CardHeader>\r\n                                                <CardImg onClick={() => this.openModal(product)} src={product.image} alt={product.description}></CardImg>\r\n                                                <CardFooter>\r\n                                                    <p>{product.description}</p>\r\n                                                    <p>{formatCurrency(product.price)}</p>\r\n                                                </CardFooter>\r\n                                                <Button onClick={() => this.props.addToCart(product)} color='warning' style={{margin: '1rem'}}>\r\n                                                    Add To Cart\r\n                                                </Button> \r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                    </Fade>\r\n                </div>\r\n                <div className='row'>\r\n                    {\r\n                        product && \r\n                        <div> \r\n                            <Modal className='product-title' isOpen={true} onRequestClose={this.closeModal}>\r\n                                <ModalBody>\r\n                                    <Button className='float-right' onClick={() => this.closeModal()}>x</Button>\r\n                                    <ModalHeader onClick={this.closeModal}>{product.title}</ModalHeader>\r\n                                    <CardImg onClick={this.toggleModal} src={product.image} alt={product.description}></CardImg>\r\n                                    <ModalFooter>\r\n                                        <p>{product.description}</p>\r\n                                        <p>{formatCurrency(product.price)}</p>\r\n                                    </ModalFooter>\r\n                                    <Button onClick={() => {this.props.addToCart(product); this.closeModal()}}  color='warning' style={{margin: '1rem'}}>\r\n                                        Add To Cart\r\n                                    </Button> \r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div> \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({products: state.products.filteredItems}), {fetchProducts, addToCart}) (ProductComponent); \r\n","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\productActions.js",[],["62","63"],"C:\\projects\\portfolio-react-shopping-cart\\src\\App.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\index.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\productReducers.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\types.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\util.js",[],["64","65"],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js",["66"],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\cartActions.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\cartReducers.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\store.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\orderReducers.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\orderActions.js",[],{"ruleId":"67","severity":1,"message":"68","line":43,"column":99,"nodeType":"69","endLine":43,"endColumn":151},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"67","severity":1,"message":"68","line":51,"column":44,"nodeType":"69","endLine":51,"endColumn":56},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"no-global-assign","no-unsafe-negation"]