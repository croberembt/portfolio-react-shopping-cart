[{"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js":"1","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\productActions.js":"2","C:\\projects\\portfolio-react-shopping-cart\\src\\App.js":"3","C:\\projects\\portfolio-react-shopping-cart\\src\\index.js":"4","C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\productReducers.js":"5","C:\\projects\\portfolio-react-shopping-cart\\src\\types.js":"6","C:\\projects\\portfolio-react-shopping-cart\\src\\util.js":"7","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js":"8","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js":"9","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\cartActions.js":"10","C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\cartReducers.js":"11","C:\\projects\\portfolio-react-shopping-cart\\src\\store.js":"12","C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\orderReducers.js":"13","C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\orderActions.js":"14","C:\\projects\\portfolio-react-shopping-cart\\src\\screens\\AdminScreen.js":"15","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\OrderComponent.js":"16","C:\\projects\\portfolio-react-shopping-cart\\src\\screens\\HomeScreen.js":"17"},{"size":4166,"mtime":1610231177482,"results":"18","hashOfConfig":"19"},{"size":1128,"mtime":1609544400450,"results":"20","hashOfConfig":"19"},{"size":1801,"mtime":1609639364511,"results":"21","hashOfConfig":"19"},{"size":267,"mtime":1610314763700,"results":"22","hashOfConfig":"19"},{"size":787,"mtime":1609450648874,"results":"23","hashOfConfig":"19"},{"size":457,"mtime":1610384869888,"results":"24","hashOfConfig":"19"},{"size":103,"mtime":1607452613421,"results":"25","hashOfConfig":"19"},{"size":8620,"mtime":1610230699936,"results":"26","hashOfConfig":"19"},{"size":1914,"mtime":1610231255265,"results":"27","hashOfConfig":"19"},{"size":958,"mtime":1609721404322,"results":"28","hashOfConfig":"19"},{"size":448,"mtime":1609721013866,"results":"29","hashOfConfig":"19"},{"size":625,"mtime":1610154347588,"results":"30","hashOfConfig":"19"},{"size":444,"mtime":1610385289086,"results":"31","hashOfConfig":"19"},{"size":1035,"mtime":1610388682246,"results":"32","hashOfConfig":"19"},{"size":293,"mtime":1610384530249,"results":"33","hashOfConfig":"19"},{"size":1513,"mtime":1610388566893,"results":"34","hashOfConfig":"19"},{"size":879,"mtime":1610388102718,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"5qr8yt",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js",["74"],"import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardImg, CardFooter, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\nimport Fade from 'react-reveal/Fade';\r\nimport {connect} from 'react-redux'; \r\nimport {fetchProducts} from '../actions/productActions'; \r\nimport {addToCart} from '../actions/cartActions'; \r\n\r\nclass ProductComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            product: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchProducts(); \r\n    }\r\n\r\n    openModal = (product) => {\r\n        this.setState({product}); \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({product: null});\r\n    }\r\n\r\n    render() {\r\n        const {product} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Fade bottom>\r\n                        {\r\n                            !this.props.products ? (<div style={{fontWeight: 'bold', color: 'white'}}>Loading...</div>) :\r\n                            <div className='row'>\r\n                                {this.props.products.map(product => \r\n                                    <div className='col-md-6'> \r\n                                        <Card key={product._id} style={{marginBottom: '2rem'}}>\r\n                                            <CardBody>\r\n                                                <CardHeader className='text-center product-title'><a href='#' onClick={() => this.openModal(product)}>{product.title}</a></CardHeader>\r\n                                                <CardImg onClick={() => this.openModal(product)} src={product.image} alt={product.description}></CardImg>\r\n                                                <CardFooter>\r\n                                                    <p>{product.description}</p>\r\n                                                    <p>{formatCurrency(product.price)}</p>\r\n                                                </CardFooter>\r\n                                                <Button onClick={() => this.props.addToCart(product)} color='warning' style={{margin: '1rem'}}>\r\n                                                    Add To Cart\r\n                                                </Button> \r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                    </Fade>\r\n                </div>\r\n                <div className='row'>\r\n                    {\r\n                        product && \r\n                        <div> \r\n                            <Modal className='product-title' isOpen={true} onRequestClose={this.closeModal}>\r\n                                <ModalBody>\r\n                                    <Button className='float-right' onClick={() => this.closeModal()}>x</Button>\r\n                                    <ModalHeader onClick={this.closeModal}>{product.title}</ModalHeader>\r\n                                    <CardImg onClick={this.toggleModal} src={product.image} alt={product.description}></CardImg>\r\n                                    <ModalFooter>\r\n                                        <p>{product.description}</p>\r\n                                        <p>{formatCurrency(product.price)}</p>\r\n                                    </ModalFooter>\r\n                                    <Button onClick={() => {this.props.addToCart(product); this.closeModal()}}  color='warning' style={{margin: '1rem'}}>\r\n                                        Add To Cart\r\n                                    </Button> \r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div> \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({products: state.products.filteredItems}), {fetchProducts, addToCart}) (ProductComponent); \r\n",["75","76"],"C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\productActions.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\App.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\index.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\productReducers.js",[],["77","78"],"C:\\projects\\portfolio-react-shopping-cart\\src\\types.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\util.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js",["79"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Button, CardBody, CardFooter, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\nimport Fade from 'react-reveal/Fade';\r\nimport { connect } from 'react-redux';\r\nimport {removeFromCart} from '../actions/cartActions'; \r\nimport {createOrder, clearOrder} from '../actions/orderActions'; \r\n\r\nclass CartComponent extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            showCheckout: false\r\n        }\r\n    }\r\n\r\n    handleInput = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    createOrder = event => {\r\n        event.preventDefault();\r\n        const order = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            cartItems: this.props.cartItems,\r\n            total: this.props.cartItems.reduce((a, c) => a + c.price*c.count, 0)\r\n        };\r\n        this.props.createOrder(order); \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.clearOrder(); \r\n    }\r\n\r\n    render() {\r\n        const cartList = this.props.cartItems.map(item => {\r\n            return (\r\n                <div key={item._id} className='cart-depiction'>\r\n                    <Card>\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                                <div className='media'>\r\n                                    <img className='mr-3' src={item.image} alt={item.description}></img>\r\n                                    <div className='media-body' style={{marginTop: '.5rem', marginRight: '.5rem'}}>\r\n                                        <p><a href='#'>{item.title}</a></p>\r\n                                        <p>{formatCurrency(item.price)} x {item.count}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <Button onClick={() => this.props.removeFromCart(item)} color='danger' style={{fontWeight: 'bold', marginBottom: '.5rem'}}>\r\n                                    Remove\r\n                                </Button> \r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }); \r\n\r\n        return (\r\n            <Fade top>\r\n                <div>\r\n                    <div>\r\n                        {\r\n                            this.props.cartItems.length === 0 ? \r\n                            <Card>\r\n                                <CardHeader className='cart-empty'>Your cart is empty, add some cheer!\r\n                                </CardHeader>\r\n                            </Card> \r\n                            : \r\n                            this.props.cartItems.length === 1 ? \r\n                            <Card>\r\n                                <CardHeader className='cart-full'> You have {this.props.cartItems.length} decoration in your cart!\r\n                                </CardHeader>\r\n                            </Card> \r\n                            : \r\n                            <Card>\r\n                                <CardHeader className='cart-full'>You have {this.props.cartItems.length} decorations in your cart!</CardHeader>\r\n                            </Card>\r\n                        }\r\n                        {\r\n                            this.props.order && \r\n                            <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                                <ModalBody className='order-modal'>\r\n                                    <Button className='float-right' onClick={this.closeModal}>x</Button>\r\n                                    <ModalHeader>Thanks {this.props.order.name}, we have received your order!</ModalHeader>\r\n                                    <div style={{padding: '1rem'}}>\r\n                                        <div>Reference Number: {this.props.order._id}</div>\r\n                                        <div>Order Date: {this.props.order.createdAt}</div>\r\n                                        <div>Shipping Address: {this.props.order.address}</div>\r\n                                        <div style={{paddingTop: '.5rem'}}> \r\n                                            {this.props.order.cartItems.map(item => (\r\n                                                <div>\r\n                                                    {item.count} {'x'} {item.title}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <div style={{paddingTop: '.5rem'}}>Total: {formatCurrency(this.props.order.total)}</div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {cartList}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.props.cartItems.length >= 1 ? \r\n                            <div>\r\n                                <Card className='total-price'>\r\n                                    <CardBody>\r\n                                        <CardHeader>\r\n                                            Total Price: {formatCurrency(this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0))}\r\n                                        </CardHeader>\r\n                                        <CardFooter>\r\n                                            <Button onClick={() => {this.setState({showCheckout: true})}} color='success' style={{fontWeight: 'bold'}}>\r\n                                                Proceed\r\n                                            </Button>\r\n                                        </CardFooter>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div> :\r\n                            <div></div>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.state.showCheckout && \r\n                            <Fade bottom>\r\n                                <Card>\r\n                                    <form onSubmit={this.createOrder}>\r\n                                        <div className='container'>\r\n                                            <div className='row'>\r\n                                                <div className='col-8'>\r\n                                                    <input name='email' type='email' required className='form-control' placeholder='Email' onChange={this.handleInput}></input>\r\n                                                </div>\r\n                                                <div className='col-4'></div>\r\n                                                <div className='col-8'>\r\n                                                    <input name='name' type='text' required className='form-control' placeholder='Name' onChange={this.handleInput}></input>\r\n                                                </div>\r\n                                                <div className='col-4'></div>\r\n                                                <div className='col-8'>\r\n                                                    <input name='address' type='text' required className='form-control' placeholder='Address'  onChange={this.handleInput}></input>\r\n                                                </div>\r\n                                                <div className='col-4'></div>\r\n                                                <div className='col-12'>\r\n                                                    <Button color='success' style={{fontWeight: 'bold', marginTop: '.5rem', marginBottom: '.5rem'}}>Checkout</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </Card>\r\n                            </Fade>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default connect(state => ({order: state.order.order, cartItems: state.cart.cartItems}), {removeFromCart, createOrder, clearOrder})(CartComponent); \r\n","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\cartActions.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\cartReducers.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\store.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\reducers\\orderReducers.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\actions\\orderActions.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\screens\\AdminScreen.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\OrderComponent.js",["80"],"C:\\projects\\portfolio-react-shopping-cart\\src\\screens\\HomeScreen.js",[],{"ruleId":"81","severity":1,"message":"82","line":43,"column":99,"nodeType":"83","endLine":43,"endColumn":151},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"81","severity":1,"message":"82","line":51,"column":44,"nodeType":"83","endLine":51,"endColumn":56},{"ruleId":"90","severity":2,"message":"91","line":17,"column":22,"nodeType":"92","messageId":"93","endLine":17,"endColumn":28},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"no-undef","'orders' is not defined.","Identifier","undef","no-global-assign","no-unsafe-negation"]