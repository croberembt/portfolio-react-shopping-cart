[{"C:\\projects\\portfolio-react-shopping-cart\\src\\App.js":"1","C:\\projects\\portfolio-react-shopping-cart\\src\\index.js":"2","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js":"3","C:\\projects\\portfolio-react-shopping-cart\\src\\util.js":"4","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js":"5","C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js":"6"},{"size":5148,"mtime":1607742255225,"results":"7","hashOfConfig":"8"},{"size":267,"mtime":1606950657545,"results":"9","hashOfConfig":"8"},{"size":1460,"mtime":1607299876755,"results":"10","hashOfConfig":"8"},{"size":103,"mtime":1607452613421,"results":"11","hashOfConfig":"8"},{"size":1239,"mtime":1607368634313,"results":"12","hashOfConfig":"8"},{"size":5859,"mtime":1607741494052,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5qr8yt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\projects\\portfolio-react-shopping-cart\\src\\App.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\index.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\ProductComponent.js",["28"],"import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardImg, CardFooter } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\n\r\nexport default class ProductComponent extends Component {\r\n    render() {\r\n        const productList = this.props.products.map(product => {\r\n            return (\r\n                <div key={product._id} className='col-md-6'>\r\n                    <Card style={{marginBottom: '2rem'}}>\r\n                        <CardBody>\r\n                            <CardHeader className='text-center product-title'><a href='#'>{product.title}</a></CardHeader>\r\n                            <CardImg src={product.image} alt={product.description}></CardImg>\r\n                            <CardFooter>\r\n                                <p>{product.description}</p>\r\n                                <p>{formatCurrency(product.price)}</p>\r\n                            </CardFooter>\r\n                            <Button onClick={() => this.props.addToCart(product)} color='warning' style={{margin: '1rem'}}>\r\n                                Add To Cart\r\n                            </Button> \r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    {productList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\projects\\portfolio-react-shopping-cart\\src\\util.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\FilterComponent.js",[],"C:\\projects\\portfolio-react-shopping-cart\\src\\components\\CartComponent.js",["29"],"import React, { Component } from 'react';\r\nimport { Card, CardHeader, Button, CardBody, CardFooter } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\n\r\nexport default class CartComponent extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            showCheckout: false\r\n        }\r\n    }\r\n\r\n    handleInput = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    createOrder = event => {\r\n        event.preventDefault();\r\n        const order = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            cartItems: this.props.cartItems\r\n        };\r\n        this.props.createOrder(order); \r\n        alert(this.state);\r\n    }\r\n\r\n    render() {\r\n        const cartList = this.props.cartItems.map(item => {\r\n            return (\r\n                <div key={item._id} className='cart-depiction'>\r\n                    <Card>\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                                <div className='media'>\r\n                                    <img className='mr-3' src={item.image} alt={item.description}></img>\r\n                                    <div className='media-body' style={{marginTop: '.5rem', marginRight: '.5rem'}}>\r\n                                        <p><a href='#'>{item.title}</a></p>\r\n                                        <p>{formatCurrency(item.price)} x {item.count}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <Button onClick={() => this.props.removeFromCart(item)} color='danger' style={{fontWeight: 'bold', marginBottom: '.5rem'}}>\r\n                                    Remove\r\n                                </Button> \r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }); \r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {\r\n                    this.props.cartItems.length === 0 ? <Card><CardHeader className='cart-empty'>Your cart is empty, add some cheer!</CardHeader></Card> : \r\n                    this.props.cartItems.length === 1 ? <Card><CardHeader className='cart-full'> You have {this.props.cartItems.length} decoration in your cart!</CardHeader></Card> : \r\n                    <Card><CardHeader className='cart-full'>You have {this.props.cartItems.length} decorations in your cart!</CardHeader></Card>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {cartList}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.cartItems.length >= 1 ? \r\n                        <div>\r\n                            <Card className='total-price'>\r\n                                <CardBody>\r\n                                    <CardHeader>\r\n                                        Total Price: {formatCurrency(this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0))}\r\n                                    </CardHeader>\r\n                                    <CardFooter>\r\n                                        <Button onClick={() => {this.setState({showCheckout: true})}} color='success' style={{fontWeight: 'bold'}}>\r\n                                            Proceed\r\n                                        </Button>\r\n                                    </CardFooter>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div> :\r\n                        <div></div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.state.showCheckout && \r\n                        (\r\n                            <Card>\r\n                                <form onSubmit={this.createOrder}>\r\n                                    <div className='container'>\r\n                                        <div className='row'>\r\n                                            <div className='col-8'>\r\n                                                <input name='email' type='email' required className='form-control' placeholder='Email' onChange={this.handleInput}></input>\r\n                                            </div>\r\n                                            <div className='col-4'></div>\r\n                                            <div className='col-8'>\r\n                                                <input name='name' type='text' required className='form-control' placeholder='Name' onChange={this.handleInput}></input>\r\n                                            </div>\r\n                                            <div className='col-4'></div>\r\n                                            <div className='col-8'>\r\n                                                <input name='address' type='text' required className='form-control' placeholder='Address'  onChange={this.handleInput}></input>\r\n                                            </div>\r\n                                            <div className='col-4'></div>\r\n                                            <div className='col-12'>\r\n                                                <Button color='success' style={{fontWeight: 'bold', marginTop: '.5rem', marginBottom: '.5rem'}}>Checkout</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </Card>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n",{"ruleId":"30","severity":1,"message":"31","line":12,"column":79,"nodeType":"32","endLine":12,"endColumn":91},{"ruleId":"30","severity":1,"message":"31","line":43,"column":44,"nodeType":"32","endLine":43,"endColumn":56},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]