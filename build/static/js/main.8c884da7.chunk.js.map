{"version":3,"sources":["util.js","types.js","components/ProductComponent.js","actions/productActions.js","actions/cartActions.js","components/FilterComponent.js","components/CartComponent.js","actions/orderActions.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["formatCurrency","num","Number","toLocaleString","FETCH_PRODUCTS","FILTER_PRODUCTS_BY_STYLE","SORT_PRODUCTS_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","ProductComponent","props","openModal","product","setState","closeModal","state","this","fetchProducts","className","bottom","products","map","Card","style","marginBottom","CardBody","CardHeader","href","onClick","title","CardImg","src","image","alt","description","CardFooter","price","Button","addToCart","color","margin","_id","fontWeight","Modal","isOpen","onRequestClose","ModalBody","ModalHeader","toggleModal","ModalFooter","Component","connect","filteredItems","dispatch","a","fetch","res","json","data","type","payload","getState","cartItems","cart","slice","alreadyExists","forEach","x","count","push","localStorage","setItem","JSON","stringify","FilterComponent","filteredProducts","length","value","productSort","onChange","event","sortProducts","target","productStyle","filterProducts","items","filter","indexOf","sortedProducts","sort","b","CartComponent","handleInput","name","createOrder","preventDefault","order","email","address","total","reduce","c","clearOrder","showCheckout","cartList","item","marginTop","marginRight","removeFromCart","top","padding","createdAt","paddingTop","onSubmit","required","placeholder","method","headers","body","then","clear","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","parse","getItem","applyMiddleware","thunk","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c884da7.chunk.js","sourcesContent":["export default function formatCurrency(num) {\r\n    return '$' + Number(num.toLocaleString(2)) + ''; \r\n}","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS'; \r\nexport const FILTER_PRODUCTS_BY_STYLE = 'FILTER_PRODUCTS_BY_STYLE';\r\nexport const SORT_PRODUCTS_BY_PRICE = 'SORT_PRODUCTS_BY_PRICE'; \r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'; \r\nexport const CREATE_ORDER = 'CREATE_ORDER';\r\nexport const CLEAR_ORDER = 'CLEAR_ORDER'; \r\nexport const CLEAR_CART = 'CLEAR_CART'; ","import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, CardImg, CardFooter, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\nimport Fade from 'react-reveal/Fade';\r\nimport {connect} from 'react-redux'; \r\nimport {fetchProducts} from '../actions/productActions'; \r\nimport {addToCart} from '../actions/cartActions'; \r\n\r\nclass ProductComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            product: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchProducts(); \r\n    }\r\n\r\n    openModal = (product) => {\r\n        this.setState({product}); \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({product: null});\r\n    }\r\n\r\n    render() {\r\n        const {product} = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Fade bottom>\r\n                        {\r\n                            !this.props.products ? (<div style={{fontWeight: 'bold', color: 'white'}}>Loading...</div>) :\r\n                            <div className='row'>\r\n                                {this.props.products.map(product => \r\n                                    <div className='col-md-6'> \r\n                                        <Card key={product._id} style={{marginBottom: '2rem'}}>\r\n                                            <CardBody>\r\n                                                <CardHeader className='text-center product-title'><a href='#' onClick={() => this.openModal(product)}>{product.title}</a></CardHeader>\r\n                                                <CardImg onClick={() => this.openModal(product)} src={product.image} alt={product.description}></CardImg>\r\n                                                <CardFooter>\r\n                                                    <p>{product.description}</p>\r\n                                                    <p>{formatCurrency(product.price)}</p>\r\n                                                </CardFooter>\r\n                                                <Button onClick={() => this.props.addToCart(product)} color='warning' style={{margin: '1rem'}}>\r\n                                                    Add To Cart\r\n                                                </Button> \r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                    </Fade>\r\n                </div>\r\n                <div className='row'>\r\n                    {\r\n                        product && \r\n                        <div> \r\n                            <Modal className='product-title' isOpen={true} onRequestClose={this.closeModal}>\r\n                                <ModalBody>\r\n                                    <Button className='float-right' onClick={() => this.closeModal()}>x</Button>\r\n                                    <ModalHeader onClick={this.closeModal}>{product.title}</ModalHeader>\r\n                                    <CardImg onClick={this.toggleModal} src={product.image} alt={product.description}></CardImg>\r\n                                    <ModalFooter>\r\n                                        <p>{product.description}</p>\r\n                                        <p>{formatCurrency(product.price)}</p>\r\n                                    </ModalFooter>\r\n                                    <Button onClick={() => {this.props.addToCart(product); this.closeModal()}}  color='warning' style={{margin: '1rem'}}>\r\n                                        Add To Cart\r\n                                    </Button> \r\n                                </ModalBody>\r\n                            </Modal>\r\n                        </div> \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({products: state.products.filteredItems}), {fetchProducts, addToCart}) (ProductComponent); \r\n","import {FETCH_PRODUCTS, FILTER_PRODUCTS_BY_STYLE, SORT_PRODUCTS_BY_PRICE} from '../types'; \r\n\r\nexport const fetchProducts = () => async (dispatch) => {\r\n    \r\n    const res = await fetch('/api/products');\r\n    const data = await res.json(); \r\n\r\n    dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data\r\n    });\r\n    \r\n}\r\n\r\nexport const filterProducts = (products, productStyle) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: FILTER_PRODUCTS_BY_STYLE,\r\n        payload: {\r\n            productStyle: productStyle,\r\n            items: productStyle === '' ? products : products.filter(product => product.productStyle.indexOf(productStyle) >=0)\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const sortProducts = (filteredProducts, productSort) => (dispatch) => {\r\n\r\n    const sortedProducts = filteredProducts.slice(); \r\n   \r\n    sortedProducts.sort((a, b) => productSort === 'lowest' ? a.price > b.price ? 1 : -1 : a.price > b.price ? -1: 1);\r\n    \r\n    dispatch({\r\n        type: SORT_PRODUCTS_BY_PRICE,\r\n        payload: {\r\n            productSort: productSort,\r\n            items: sortedProducts\r\n        }\r\n    })\r\n\r\n}","import {ADD_TO_CART, REMOVE_FROM_CART} from '../types'; \r\n\r\nexport const addToCart = (product) => (dispatch, getState) => {\r\n    \r\n    const cartItems = getState().cart.cartItems.slice(); \r\n\r\n    let alreadyExists = false; \r\n\r\n    cartItems.forEach(x => {\r\n        if (x._id === product._id) {\r\n            alreadyExists = true;\r\n            x.count++; \r\n        }\r\n    });\r\n\r\n    if (!alreadyExists) {\r\n        cartItems.push({...product, count : 1}); \r\n    }\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {cartItems}\r\n    }); \r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems)); \r\n\r\n}\r\n\r\nexport const removeFromCart = (product) => (dispatch, getState) => {\r\n    \r\n    const cartItems = getState().cart.cartItems.slice().filter(x => x._id !== product._id);\r\n\r\n    dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload: {cartItems}\r\n    }); \r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems)); \r\n\r\n}","import React, { Component } from 'react';\r\nimport {filterProducts, sortProducts} from '../actions/productActions'; \r\nimport {connect} from 'react-redux'; \r\n\r\nclass FilterComponent extends Component {\r\n    render() {\r\n        return (\r\n            !this.props.filteredProducts ? \r\n            <div style={{fontWeight: 'bold', color: 'white'}}>\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div className='filter'>\r\n                <div className='filter-result'>{this.props.filteredProducts.length} Decorations</div>\r\n                <div className='filter-sort'>\r\n                    Sort By Price\r\n                    <select value={this.props.productSort} onChange={(event) => this.props.sortProducts(this.props.filteredProducts, event.target.value)}>\r\n                        <option value=''>Default</option>\r\n                        <option value='lowest'>Lowest</option>\r\n                        <option value='highest'>Highest</option>\r\n                    </select>\r\n                </div>\r\n                <div className='filter-style'>\r\n                    Filter\r\n                <select value={this.props.productStyle} onChange={(event) => this.props.filterProducts(this.props.products, event.target.value)}>\r\n                    <option value=''>Select</option>\r\n                    <option value=''>All</option>\r\n                    <option value='wreaths'>Wreaths</option>\r\n                    <option value='knickknacks'>Knickknacks</option>\r\n                    <option value='ornaments'>Ornaments</option>\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({productStyle: state.products.productStyle, productSort: state.products.productSort, products: state.products.items, \r\n    filteredProducts: state.products.filteredItems}), {filterProducts, sortProducts})(FilterComponent); ","import React, { Component } from 'react';\r\nimport { Card, CardHeader, Button, CardBody, CardFooter, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport formatCurrency from '../util'; \r\nimport Fade from 'react-reveal/Fade';\r\nimport { connect } from 'react-redux';\r\nimport {removeFromCart} from '../actions/cartActions'; \r\nimport {createOrder, clearOrder} from '../actions/orderActions'; \r\n\r\nclass CartComponent extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            showCheckout: false\r\n        }\r\n    }\r\n\r\n    handleInput = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    createOrder = event => {\r\n        event.preventDefault();\r\n        const order = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            cartItems: this.props.cartItems,\r\n            total: this.props.cartItems.reduce((a, c) => a + c.price*c.count, 0)\r\n        };\r\n        this.props.createOrder(order); \r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.clearOrder(); \r\n    }\r\n\r\n    render() {\r\n        const cartList = this.props.cartItems.map(item => {\r\n            return (\r\n                <div key={item._id} className='cart-depiction'>\r\n                    <Card>\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                                <div className='media'>\r\n                                    <img className='mr-3' src={item.image} alt={item.description}></img>\r\n                                    <div className='media-body' style={{marginTop: '.5rem', marginRight: '.5rem'}}>\r\n                                        <p><a href='#'>{item.title}</a></p>\r\n                                        <p>{formatCurrency(item.price)} x {item.count}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <Button onClick={() => this.props.removeFromCart(item)} color='danger' style={{fontWeight: 'bold', marginBottom: '.5rem'}}>\r\n                                    Remove\r\n                                </Button> \r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }); \r\n\r\n        return (\r\n            <Fade top>\r\n                <div>\r\n                    <div>\r\n                        {\r\n                            this.props.cartItems.length === 0 ? \r\n                            <Card>\r\n                                <CardHeader className='cart-empty'>Your cart is empty, add some cheer!\r\n                                </CardHeader>\r\n                            </Card> \r\n                            : \r\n                            this.props.cartItems.length === 1 ? \r\n                            <Card>\r\n                                <CardHeader className='cart-full'> You have {this.props.cartItems.length} decoration in your cart!\r\n                                </CardHeader>\r\n                            </Card> \r\n                            : \r\n                            <Card>\r\n                                <CardHeader className='cart-full'>You have {this.props.cartItems.length} decorations in your cart!</CardHeader>\r\n                            </Card>\r\n                        }\r\n                        {\r\n                            this.props.order && \r\n                            <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                                <ModalBody className='order-modal'>\r\n                                    <Button className='float-right' onClick={this.closeModal}>x</Button>\r\n                                    <ModalHeader>Thanks {this.props.order.name}, we have received your order!</ModalHeader>\r\n                                    <div style={{padding: '1rem'}}>\r\n                                        <div>Reference Number: {this.props.order._id}</div>\r\n                                        <div>Order Date: {this.props.order.createdAt}</div>\r\n                                        <div>Shipping Address: {this.props.order.address}</div>\r\n                                        <div style={{paddingTop: '.5rem'}}> \r\n                                            {this.props.order.cartItems.map(item => (\r\n                                                <div>\r\n                                                    {item.count} {'x'} {item.title}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <div style={{paddingTop: '.5rem'}}>Total: {formatCurrency(this.props.order.total)}</div>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </Modal>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {cartList}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.props.cartItems.length >= 1 ? \r\n                            <div>\r\n                                <Card className='total-price'>\r\n                                    <CardBody>\r\n                                        <CardHeader>\r\n                                            Total Price: {formatCurrency(this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0))}\r\n                                        </CardHeader>\r\n                                        <CardFooter>\r\n                                            <Button onClick={() => {this.setState({showCheckout: true})}} color='success' style={{fontWeight: 'bold'}}>\r\n                                                Proceed\r\n                                            </Button>\r\n                                        </CardFooter>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div> :\r\n                            <div></div>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.state.showCheckout && \r\n                            <Fade bottom>\r\n                                <Card>\r\n                                    <form onSubmit={this.createOrder}>\r\n                                        <div className='container'>\r\n                                            <div className='row'>\r\n                                                <div className='col-8'>\r\n                                                    <input name='email' type='email' required className='form-control' placeholder='Email' onChange={this.handleInput}></input>\r\n                                                </div>\r\n                                                <div className='col-4'></div>\r\n                                                <div className='col-8'>\r\n                                                    <input name='name' type='text' required className='form-control' placeholder='Name' onChange={this.handleInput}></input>\r\n                                                </div>\r\n                                                <div className='col-4'></div>\r\n                                                <div className='col-8'>\r\n                                                    <input name='address' type='text' required className='form-control' placeholder='Address'  onChange={this.handleInput}></input>\r\n                                                </div>\r\n                                                <div className='col-4'></div>\r\n                                                <div className='col-12'>\r\n                                                    <Button color='success' style={{fontWeight: 'bold', marginTop: '.5rem', marginBottom: '.5rem'}}>Checkout</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </Card>\r\n                            </Fade>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default connect(state => ({order: state.order.order, cartItems: state.cart.cartItems}), {removeFromCart, createOrder, clearOrder})(CartComponent); \r\n","import { CLEAR_CART, CREATE_ORDER, CLEAR_ORDER } from \"../types\"\r\n\r\nexport const createOrder = (order) => (dispatch) => {\r\n    fetch('/api/orders', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(order)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        dispatch(\r\n            { \r\n                type: CREATE_ORDER, \r\n                payload: data\r\n            }\r\n        );\r\n        localStorage.clear('cartItems'); \r\n        dispatch(\r\n            {\r\n                type: CLEAR_CART\r\n            }\r\n        ); \r\n    })\r\n}\r\n\r\nexport const clearOrder = () => dispatch => {\r\n    dispatch(\r\n        {\r\n            type: CLEAR_ORDER\r\n        }\r\n    )\r\n}","import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {productsReducer} from './reducers/productReducers';\r\nimport {cartReducer} from './reducers/cartReducers'; \r\nimport {orderReducer} from './reducers/orderReducers'; \r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \r\n\r\nconst store = createStore(combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer\r\n}),\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store; \r\n","import {FETCH_PRODUCTS, FILTER_PRODUCTS_BY_STYLE, SORT_PRODUCTS_BY_PRICE} from '../types'; \r\n\r\nexport const productsReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case FETCH_PRODUCTS: \r\n            return {items: action.payload, filteredItems: action.payload};\r\n        case FILTER_PRODUCTS_BY_STYLE: \r\n            return {\r\n                ...state, \r\n                productStyle: action.payload.productStyle,\r\n                filteredItems: action.payload.items\r\n            };\r\n        case SORT_PRODUCTS_BY_PRICE: \r\n            return {\r\n                ...state,\r\n                productSort: action.payload.productSort,\r\n                filteredItems: action.payload.items\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n","import {ADD_TO_CART, REMOVE_FROM_CART} from '../types'; \r\n\r\nexport const cartReducer = (state = {cartItems: JSON.parse(localStorage.getItem('cartItems') || '[]')}, action) => {\r\n    \r\n    switch(action.type) {\r\n        case ADD_TO_CART: \r\n            return {cartItems: action.payload.cartItems}; \r\n        case REMOVE_FROM_CART: \r\n            return {cartItems: action.payload.cartItems};\r\n        default: \r\n            return state; \r\n    }\r\n\r\n}","import { CREATE_ORDER, CLEAR_ORDER } from \"../types\"\r\n\r\nconst orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER: \r\n            return {order: action.payload}; \r\n        case CLEAR_ORDER: \r\n            return {order: null}; \r\n        default: \r\n            return state; \r\n    }\r\n};\r\n\r\nexport {orderReducer}; ","import React from 'react'; \nimport ProductComponent from './components/ProductComponent';\nimport FilterComponent from './components/FilterComponent';\nimport CartComponent from './components/CartComponent';\nimport { Provider } from 'react-redux'; \nimport store from './store';\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <div className='container-fluid'>\n                    <header>\n                        <h2><a href='/'>Christmas Decor Online Store</a></h2>\n                    </header>\n                    <main>\n                        <div className='container'>\n                            <div className='row'>\n                                <div className='col-md-6 filter-section'>\n                                    <FilterComponent /> \n                                </div>\n                                <div className='col-md-6 cart-style' style={{color: 'white'}}>\n                                    <CartComponent />\n                                </div>\n                                <div className='col-12 main'>\n                                    <ProductComponent />\n                                </div>\n                            </div>\n                        </div>\n                    </main>\n                    <footer>\n                        <div className='container-fluid'>\n                            <div className='row'>\n                                <div className='col-8 footer-copyright'>\n                                    © 2020, Calli Oberembt\n                                </div>\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}